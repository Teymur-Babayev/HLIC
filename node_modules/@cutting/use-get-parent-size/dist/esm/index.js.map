{"version":3,"file":"index.js","sources":["../../src/useParentSize/util.ts","../../src/useParentSize/useIsomorphicLayoutEffect.ts","../../src/useParentSize/useParentSize.ts"],"sourcesContent":["export const isNil = <T>(val: T | null | undefined): val is null | undefined =>\n  typeof val === 'undefined' || val === null;\n\nexport const identity = <T>(o: T): T => o;\n","import { useEffect, useLayoutEffect } from 'react';\n\nexport const useIsomorphicLayoutEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;\n","import type { ResizeObserverContentRect, UseParentSizeOptions, UseParentSizeResult, Writeable } from './types';\nimport type { RefObject } from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { identity, isNil } from './util';\nimport { assert } from '@cutting/assert';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\nconst initialContentRect: Partial<ResizeObserverContentRect> = {\n  bottom: undefined,\n  height: undefined,\n  left: undefined,\n  width: undefined,\n  right: undefined,\n  top: undefined,\n  x: undefined,\n  y: undefined,\n};\n\nexport const useParentSize = <E extends Element>(\n  ref: RefObject<E>,\n  {\n    debounceDelay = 500,\n    initialValues = initialContentRect,\n    transformFunc = (o: Partial<ResizeObserverContentRect>) => o as ResizeObserverContentRect,\n    maxDifference = 10,\n    callback = identity,\n  }: Partial<UseParentSizeOptions> = {},\n): UseParentSizeResult => {\n  const [contentRect, setContentRect] = useState<ResizeObserverContentRect>({\n    ...initialContentRect,\n    ...initialValues,\n  } as ResizeObserverContentRect);\n  const rerenderCount = useRef(0);\n  const previousContentRect = useRef<Writeable<ResizeObserverContentRect>>(initialValues as ResizeObserverContentRect);\n\n  const transformer = useCallback(transformFunc, [transformFunc]);\n\n  assert(!!ref, 'You must pass a valid ref to useParentSize');\n\n  const debouncedCallback = useDebouncedCallback(\n    (value: ResizeObserverContentRect) => {\n      setContentRect(value);\n      callback(value);\n    },\n    debounceDelay,\n    {\n      leading: true,\n    },\n  );\n\n  const refElement = ref.current;\n\n  useIsomorphicLayoutEffect(() => {\n    if (isNil(refElement)) {\n      if (rerenderCount.current > 10) {\n        throw new Error('Maximum rerender count and no refElement Found');\n      }\n\n      setContentRect({ ...contentRect } as ResizeObserverContentRect);\n      rerenderCount.current++;\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      if (!Array.isArray(entries) || entries.length !== 1) {\n        return;\n      }\n\n      const entry = entries[0];\n      const newWidth = Math.round(entry.contentRect.width);\n      const newHeight = Math.round(entry.contentRect.height);\n\n      const widthDiff = Math.abs(newWidth - (previousContentRect.current.width ?? 0));\n      const heightDiff = Math.abs(newHeight - (previousContentRect.current.height ?? 0));\n\n      if (widthDiff > maxDifference || heightDiff > maxDifference) {\n        previousContentRect.current.height = newHeight;\n        previousContentRect.current.width = newWidth;\n        debouncedCallback(entry.contentRect);\n      }\n    });\n\n    requestAnimationFrame(() => resizeObserver?.observe(refElement));\n\n    return () => {\n      if (!!refElement) {\n        resizeObserver?.unobserve(refElement);\n      }\n    };\n  }, [maxDifference, debouncedCallback, refElement, initialValues, contentRect]);\n\n  return useMemo(() => transformer(contentRect), [contentRect, transformer]);\n};\n"],"names":["identity","o","useIsomorphicLayoutEffect","window","useEffect","useLayoutEffect","initialContentRect","bottom","undefined","height","left","width","right","top","x","y","useParentSize","ref","debounceDelay","initialValues","transformFunc","maxDifference","callback","contentRect","setContentRect","useState","rerenderCount","useRef","previousContentRect","transformer","useCallback","assert","debouncedCallback","useDebouncedCallback","value","leading","refElement","current","Error","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","newWidth","Math","round","newHeight","widthDiff","abs","heightDiff","requestAnimationFrame","observe","unobserve","useMemo"],"mappings":"oPAAO,MAGMA,EAAeC,GAAYA,ECD3BC,EAA8C,oBAAXC,OAAyBC,EAAYC,ECO/EC,EAAyD,CAC7DC,YAAQC,EACRC,YAAQD,EACRE,UAAMF,EACNG,WAAOH,EACPI,WAAOJ,EACPK,SAAKL,EACLM,OAAGN,EACHO,OAAGP,GAGQQ,EAAgB,CAC3BC,GAEEC,gBAAgB,IAChBC,gBAAgBb,EAChBc,gBAAgB,CAACnB,GAA0CA,GAC3DoB,gBAAgB,GAChBC,WAAWtB,GACsB,MAEnC,MAAOuB,EAAaC,GAAkBC,EAAoC,IACrEnB,KACAa,IAECO,EAAgBC,EAAO,GACvBC,EAAsBD,EAA6CR,GAEnEU,EAAcC,EAAYV,EAAe,CAACA,IAEhDW,IAASd,EAAK,8CAEd,MAAMe,EAAoBC,GACvBC,IACCV,EAAeU,GACfZ,EAASY,EAAM,GAEjBhB,EACA,CACEiB,SAAS,IAIPC,EAAanB,EAAIoB,QAyCvB,OAvCAnC,GAA0B,KACxB,GFtDF,MEsDYkC,EAAa,CACrB,GAAIV,EAAcW,QAAU,GAC1B,MAAM,IAAIC,MAAM,kDAKlB,OAFAd,EAAe,IAAKD,SACpBG,EAAcW,SAEf,CAED,MAAME,EAAiB,IAAIC,GAAgBC,IACzC,IAAKC,MAAMC,QAAQF,IAA+B,IAAnBA,EAAQG,OACrC,OAGF,MAAMC,EAAQJ,EAAQ,GAChBK,EAAWC,KAAKC,MAAMH,EAAMtB,YAAYZ,OACxCsC,EAAYF,KAAKC,MAAMH,EAAMtB,YAAYd,QAEzCyC,EAAYH,KAAKI,IAAIL,GAAYlB,EAAoBS,QAAQ1B,OAAS,IACtEyC,EAAaL,KAAKI,IAAIF,GAAarB,EAAoBS,QAAQ5B,QAAU,KAE3EyC,EAAY7B,GAAiB+B,EAAa/B,KAC5CO,EAAoBS,QAAQ5B,OAASwC,EACrCrB,EAAoBS,QAAQ1B,MAAQmC,EACpCd,EAAkBa,EAAMtB,aACzB,IAKH,OAFA8B,uBAAsB,IAAMd,GAAgBe,QAAQlB,KAE7C,KACCA,GACJG,GAAgBgB,UAAUnB,EAC3B,CACF,GACA,CAACf,EAAeW,EAAmBI,EAAYjB,EAAeI,IAE1DiC,GAAQ,IAAM3B,EAAYN,IAAc,CAACA,EAAaM,GAAa"}