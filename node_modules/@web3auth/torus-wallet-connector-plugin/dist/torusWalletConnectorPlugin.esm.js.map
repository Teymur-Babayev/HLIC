{"version":3,"file":"torusWalletConnectorPlugin.esm.js","sources":["../src/errors.ts","../src/plugin.ts"],"sourcesContent":["import { ErrorCodes, IWeb3AuthError, Web3AuthError } from \"@web3auth/base\";\n\nexport class TorusWalletPluginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5210: \"Torus Wallet Plugin is not initialized\",\n    5211: \"Web3Auth is connected to unsupported adapter. Torus wallet connector plugin requires web3auth connected to openlogin adapter.\",\n    5212: \"Provider is required..\",\n    5213: \"Web3Auth instance is required while initialization.\",\n    5214: \"Web3Auth is not connected.\",\n    5215: \"UserInfo is required.\",\n    5216: \"Plugin is already initialized\",\n    5217: \"Torus wallet instance is not set.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"TorusWalletPluginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new TorusWalletPluginError(code, `${TorusWalletPluginError.messages[code]}${extraMessage}`);\n  }\n\n  public static notInitialized(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5210, extraMessage);\n  }\n\n  public static unsupportedAdapter(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5211, extraMessage);\n  }\n\n  public static providerRequired(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5212, extraMessage);\n  }\n\n  public static web3authRequired(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5213, extraMessage);\n  }\n\n  public static web3AuthNotConnected(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5214, extraMessage);\n  }\n\n  public static userInfoRequired(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5215, extraMessage);\n  }\n\n  public static alreadyInitialized(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5216, extraMessage);\n  }\n\n  public static torusWalletNotSet(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5217, extraMessage);\n  }\n\n  public static unsupportedChainNamespace(extraMessage = \"\"): IWeb3AuthError {\n    return TorusWalletPluginError.fromCode(5218, extraMessage);\n  }\n}\n","import type { JsonRpcError } from \"@metamask/rpc-errors\";\nimport TorusEmbed, { LOGIN_TYPE, PAYMENT_PROVIDER_TYPE, PaymentParams, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport { ADAPTER_EVENTS, ADAPTER_STATUS, CustomChainConfig, SafeEventEmitterProvider, UserInfo, WALLET_ADAPTERS } from \"@web3auth/base\";\nimport { IPlugin, PLUGIN_NAMESPACES } from \"@web3auth/base-plugin\";\nimport type { Web3AuthNoModal } from \"@web3auth/no-modal\";\nimport log from \"loglevel\";\n\nimport { TorusWalletPluginError } from \"./errors\";\n\nexport type ProviderInfo = {\n  provider?: SafeEventEmitterProvider;\n  userInfo?: Omit<UserInfo, \"isNewUser\">;\n};\n\nexport class TorusWalletConnectorPlugin implements IPlugin {\n  name = \"TORUS_WALLET_CONNECTOR_PLUGIN\";\n\n  readonly SUPPORTED_ADAPTERS = [WALLET_ADAPTERS.OPENLOGIN];\n\n  readonly pluginNamespace = PLUGIN_NAMESPACES.EIP155;\n\n  public torusWalletInstance: TorusEmbed;\n\n  private provider: SafeEventEmitterProvider | null = null;\n\n  private web3auth: Web3AuthNoModal | null = null;\n\n  private userInfo: UserInfo | null = null;\n\n  private isInitialized = false;\n\n  private walletInitOptions: TorusParams | null = null;\n\n  constructor(options: { torusWalletOpts?: TorusCtorArgs; walletInitOptions: Partial<TorusParams> & Required<Pick<TorusParams, \"whiteLabel\">> }) {\n    const { torusWalletOpts = {}, walletInitOptions } = options;\n    const whiteLabel = walletInitOptions?.whiteLabel;\n\n    if (!whiteLabel) throw new Error(\"whiteLabel is required\");\n    const { logoDark, logoLight } = whiteLabel;\n    if (!logoDark || !logoLight) throw new Error(\"logoDark and logoLight are required in whiteLabel config\");\n\n    this.torusWalletInstance = new TorusEmbed(torusWalletOpts);\n    if (typeof walletInitOptions.showTorusButton === \"undefined\") walletInitOptions.showTorusButton = true;\n    this.walletInitOptions = walletInitOptions;\n  }\n\n  get proxyProvider(): SafeEventEmitterProvider | null {\n    return this.torusWalletInstance.isLoggedIn ? (this.torusWalletInstance.provider as unknown as SafeEventEmitterProvider) : null;\n  }\n\n  async initWithWeb3Auth(web3auth: Web3AuthNoModal): Promise<void> {\n    if (this.isInitialized) return;\n    if (!web3auth) throw TorusWalletPluginError.web3authRequired();\n    if (web3auth.provider && web3auth.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) throw TorusWalletPluginError.unsupportedAdapter();\n    if (web3auth.coreOptions.chainConfig.chainNamespace !== this.pluginNamespace) throw TorusWalletPluginError.unsupportedChainNamespace();\n    // Not connected yet to openlogin\n    if (web3auth.provider) {\n      this.provider = web3auth.provider;\n      this.userInfo = (await web3auth.getUserInfo()) as UserInfo;\n    }\n    this.web3auth = web3auth;\n    this.subscribeToWeb3AuthNoModalEvents(web3auth);\n    const connectedChainConfig = web3auth.coreOptions.chainConfig as CustomChainConfig;\n    const network = {\n      ...web3auth.coreOptions.chainConfig,\n      networkName: connectedChainConfig.displayName,\n      host: connectedChainConfig.rpcTarget,\n      chainId: parseInt(connectedChainConfig.chainId, 16),\n    };\n    await this.torusWalletInstance.init({\n      ...(this.walletInitOptions || {}),\n      network,\n      showTorusButton: false,\n    });\n    this.isInitialized = true;\n  }\n\n  async initWithProvider(provider: SafeEventEmitterProvider, userInfo: UserInfo): Promise<void> {\n    if (this.isInitialized) return;\n\n    if (!userInfo) throw TorusWalletPluginError.userInfoRequired();\n    if (!provider) throw TorusWalletPluginError.providerRequired();\n\n    this.provider = provider;\n    this.userInfo = userInfo;\n    await this.torusWalletInstance.init(this.walletInitOptions || {});\n    this.isInitialized = true;\n  }\n\n  async connect(): Promise<void> {\n    // if web3auth is being used and connected to unsupported adapter throw error\n    if (this.web3auth && this.web3auth.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) throw TorusWalletPluginError.unsupportedAdapter();\n    if (!this.isInitialized) throw TorusWalletPluginError.notInitialized();\n    // Not connected yet to openlogin\n    if (!this.provider) {\n      if (this.web3auth?.provider) {\n        this.provider = this.web3auth.provider;\n        this.userInfo = (await this.web3auth.getUserInfo()) as UserInfo;\n      } else if (this.web3auth) {\n        throw TorusWalletPluginError.web3AuthNotConnected();\n      } else {\n        throw TorusWalletPluginError.providerRequired();\n      }\n    }\n    let privateKey: string | undefined;\n    try {\n      // it should throw if provider doesn't support `eth_private_key` function\n      privateKey = (await this.provider.request<never, string>({ method: \"eth_private_key\" })) as string;\n    } catch (error: unknown) {\n      log.warn(\"unsupported method\", error, TorusWalletPluginError.unsupportedAdapter());\n      if ((error as JsonRpcError<never>)?.code === -32004) throw TorusWalletPluginError.unsupportedAdapter();\n      throw error;\n    }\n    if (!privateKey) throw TorusWalletPluginError.web3AuthNotConnected();\n    try {\n      await this.torusWalletInstance.loginWithPrivateKey({\n        privateKey,\n        userInfo: {\n          ...(this.userInfo as Omit<UserInfo, \"isNewUser\">),\n          email: this.userInfo?.email as string,\n          name: this.userInfo?.name as string,\n          profileImage: this.userInfo?.profileImage as string,\n          typeOfLogin: this.userInfo?.typeOfLogin as LOGIN_TYPE, // openlogin's login type is subset of torus embed, so it is safe to cast.\n        },\n      });\n      if (this.walletInitOptions?.showTorusButton) this.torusWalletInstance.showTorusButton();\n      this.subscribeToProviderEvents(this.provider);\n      this.subscribeToWalletEvents();\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    if (!this.torusWalletInstance.isLoggedIn) throw TorusWalletPluginError.web3AuthNotConnected();\n    await this.torusWalletInstance.showWalletConnectScanner();\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<void> {\n    if (!this.torusWalletInstance.isLoggedIn) throw TorusWalletPluginError.web3AuthNotConnected();\n    await this.torusWalletInstance.initiateTopup(provider, params);\n  }\n\n  async disconnect(): Promise<void> {\n    // if web3auth is being used and connected to unsupported adapter throw error\n    if (this.web3auth?.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) throw TorusWalletPluginError.unsupportedAdapter();\n    if (this.torusWalletInstance.isLoggedIn) {\n      await this.torusWalletInstance.logout();\n    } else {\n      throw new Error(\"Torus Wallet plugin is not connected\");\n    }\n  }\n\n  private subscribeToWalletEvents() {\n    this.torusWalletInstance?.provider.on(\"accountsChanged\", (accounts = []) => {\n      if ((accounts as string[]).length === 0) {\n        this.torusWalletInstance.hideTorusButton();\n        if (this.web3auth?.status === ADAPTER_STATUS.CONNECTED) this.web3auth?.logout();\n      }\n    });\n  }\n\n  private subscribeToProviderEvents(provider: SafeEventEmitterProvider) {\n    provider.on(\"accountsChanged\", (data: { accounts: string[] } = { accounts: [] }) => {\n      this.setSelectedAddress(data.accounts[0]);\n    });\n\n    provider.on(\"chainChanged\", (chainId: string) => {\n      this.setChainID(parseInt(chainId, 16));\n    });\n    provider.on(\"disconnect\", () => {\n      this.torusWalletInstance.hideTorusButton();\n    });\n    provider.on(\"connect\", () => {\n      if (this.walletInitOptions?.showTorusButton) this.torusWalletInstance.showTorusButton();\n    });\n  }\n\n  private subscribeToWeb3AuthNoModalEvents(web3Auth: Web3AuthNoModal) {\n    web3Auth.on(ADAPTER_EVENTS.CONNECTED, async () => {\n      if (web3Auth.connectedAdapterName !== WALLET_ADAPTERS.OPENLOGIN) {\n        log.warn(`${web3Auth.connectedAdapterName} is not compatible with torus wallet connector plugin`);\n        return;\n      }\n      this.provider = web3Auth.provider;\n      this.userInfo = (await web3Auth.getUserInfo()) as Omit<UserInfo, \"isNewUser\">;\n      if (!this.provider) throw TorusWalletPluginError.web3AuthNotConnected();\n      this.subscribeToProviderEvents(this.provider);\n    });\n\n    web3Auth.on(ADAPTER_EVENTS.DISCONNECTED, async () => {\n      this.provider = null;\n      this.userInfo = null;\n      if (this.torusWalletInstance.isLoggedIn) {\n        await this.torusWalletInstance.logout();\n      }\n      this.torusWalletInstance.hideTorusButton();\n    });\n  }\n\n  private async sessionConfig(): Promise<{ chainId: number; accounts: string[]; privateKey: string; chainConfig: CustomChainConfig }> {\n    if (!this.provider) throw TorusWalletPluginError.web3AuthNotConnected();\n    const [accounts, chainId, privateKey, chainConfig] = await Promise.all([\n      this.provider.request<never, string[]>({ method: \"eth_accounts\" }),\n      this.provider.request<never, string>({ method: \"eth_chainId\" }),\n      this.provider.request<never, string>({ method: \"eth_private_key\" }),\n      this.provider.request<never, CustomChainConfig>({ method: \"eth_provider_config\" }),\n    ]);\n    return {\n      chainId: parseInt(chainId as string, 16),\n      accounts: accounts as string[],\n      privateKey: privateKey as string,\n      chainConfig: chainConfig as CustomChainConfig,\n    };\n  }\n\n  private async torusWalletSessionConfig(): Promise<{ chainId: number; accounts: string[] }> {\n    if (!this.torusWalletInstance.provider) throw TorusWalletPluginError.web3AuthNotConnected();\n    const [accounts, chainId] = await Promise.all([\n      this.torusWalletInstance.provider.request<string[]>({ method: \"eth_accounts\" }),\n      this.torusWalletInstance.provider.request<string>({ method: \"eth_chainId\" }),\n    ]);\n    return {\n      chainId: parseInt(chainId as string, 16),\n      accounts: accounts as string[],\n    };\n  }\n\n  private async setSelectedAddress(address: string): Promise<void> {\n    if (!this.torusWalletInstance.isLoggedIn || !this.userInfo) throw TorusWalletPluginError.web3AuthNotConnected();\n    const [sessionConfig, torusWalletSessionConfig] = await Promise.all([this.sessionConfig(), this.torusWalletSessionConfig()]);\n    if (address !== torusWalletSessionConfig.accounts?.[0]) {\n      await this.torusWalletInstance.loginWithPrivateKey({\n        privateKey: sessionConfig.privateKey,\n        userInfo: {\n          ...this.userInfo,\n          email: this.userInfo?.email as string,\n          name: this.userInfo?.name as string,\n          profileImage: this.userInfo?.profileImage as string,\n          typeOfLogin: this.userInfo?.typeOfLogin as LOGIN_TYPE, // openlogin's login type is subset of torus embed, so it is safe to cast.\n        },\n      });\n    }\n  }\n\n  private async setChainID(chainId: number): Promise<void> {\n    const [sessionConfig, torusWalletSessionConfig] = await Promise.all([this.sessionConfig(), this.torusWalletSessionConfig()]);\n    const { chainConfig } = sessionConfig || {};\n    if (chainId !== torusWalletSessionConfig.chainId && chainConfig) {\n      await this.torusWalletInstance.setProvider({\n        ...chainConfig,\n        chainId,\n        host: chainConfig.rpcTarget,\n        networkName: chainConfig.displayName,\n      });\n    }\n  }\n}\n"],"names":["TorusWalletPluginError","Web3AuthError","constructor","code","message","Object","defineProperty","value","fromCode","extraMessage","arguments","length","undefined","messages","notInitialized","unsupportedAdapter","providerRequired","web3authRequired","web3AuthNotConnected","userInfoRequired","alreadyInitialized","torusWalletNotSet","unsupportedChainNamespace","_defineProperty","TorusWalletConnectorPlugin","options","WALLET_ADAPTERS","OPENLOGIN","PLUGIN_NAMESPACES","EIP155","torusWalletOpts","walletInitOptions","whiteLabel","Error","logoDark","logoLight","torusWalletInstance","TorusEmbed","showTorusButton","proxyProvider","isLoggedIn","provider","initWithWeb3Auth","web3auth","isInitialized","connectedAdapterName","coreOptions","chainConfig","chainNamespace","pluginNamespace","userInfo","getUserInfo","subscribeToWeb3AuthNoModalEvents","connectedChainConfig","network","_objectSpread","networkName","displayName","host","rpcTarget","chainId","parseInt","init","initWithProvider","connect","_this$web3auth","privateKey","request","method","error","log","warn","_this$userInfo","_this$userInfo2","_this$userInfo3","_this$userInfo4","_this$walletInitOptio","loginWithPrivateKey","email","name","profileImage","typeOfLogin","subscribeToProviderEvents","subscribeToWalletEvents","showWalletConnectScanner","initiateTopup","params","disconnect","_this$web3auth2","logout","_this$torusWalletInst","_this","on","accounts","_this$web3auth3","_this$web3auth4","hideTorusButton","status","ADAPTER_STATUS","CONNECTED","_this2","data","setSelectedAddress","setChainID","_this$walletInitOptio2","web3Auth","ADAPTER_EVENTS","DISCONNECTED","sessionConfig","Promise","all","torusWalletSessionConfig","address","_torusWalletSessionCo","_this$userInfo5","_this$userInfo6","_this$userInfo7","_this$userInfo8","setProvider"],"mappings":"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"}