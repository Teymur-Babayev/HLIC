{"version":3,"file":"web3authWagmiConnector.esm.js","sources":["../src/lib/connector.ts"],"sourcesContent":["import { Address, Chain, Connector, ConnectorData, WalletClient } from \"@wagmi/core\";\nimport type { IWeb3Auth, SafeEventEmitterProvider, WALLET_ADAPTER_TYPE } from \"@web3auth/base\";\nimport * as pkg from \"@web3auth/base\";\nimport type { IWeb3AuthModal, ModalConfig } from \"@web3auth/modal\";\nimport type { OpenloginLoginParams } from \"@web3auth/openlogin-adapter\";\nimport { createWalletClient, custom, getAddress, SwitchChainError, UserRejectedRequestError } from \"viem\";\n\nimport type { Options } from \"./interfaces\";\n\nconst { ADAPTER_STATUS, CHAIN_NAMESPACES, WALLET_ADAPTERS, log } = pkg;\n\nconst IS_SERVER = typeof window === \"undefined\";\n\nfunction isIWeb3AuthModal(obj: IWeb3Auth | IWeb3AuthModal): obj is IWeb3AuthModal {\n  return typeof (obj as IWeb3AuthModal).initModal !== \"undefined\";\n}\n\nfunction normalizeChainId(chainId: string | number | bigint) {\n  if (typeof chainId === \"string\") return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  if (typeof chainId === \"bigint\") return Number(chainId);\n  return chainId;\n}\n\nexport class Web3AuthConnector extends Connector<SafeEventEmitterProvider, Options> {\n  ready = !IS_SERVER;\n\n  readonly id = \"web3auth\";\n\n  readonly name = \"Web3Auth\";\n\n  protected provider: SafeEventEmitterProvider | null = null;\n\n  private loginParams: OpenloginLoginParams | null;\n\n  private modalConfig: Record<WALLET_ADAPTER_TYPE, ModalConfig> | null;\n\n  private web3AuthInstance: IWeb3Auth | IWeb3AuthModal;\n\n  constructor({ chains, options }: { chains?: Chain[]; options: Options }) {\n    super({ chains, options });\n    this.web3AuthInstance = options.web3AuthInstance;\n    this.loginParams = options.loginParams || null;\n    this.modalConfig = options.modalConfig || null;\n  }\n\n  async connect({ chainId }: { chainId?: number } = {}): Promise<Required<ConnectorData>> {\n    try {\n      this.emit(\"message\", {\n        type: \"connecting\",\n      });\n\n      await this.getProvider();\n\n      this.provider.on(\"accountsChanged\", this.onAccountsChanged);\n      this.provider.on(\"chainChanged\", this.onChainChanged);\n\n      if (!this.web3AuthInstance.connected) {\n        if (isIWeb3AuthModal(this.web3AuthInstance)) {\n          await this.web3AuthInstance.connect();\n        } else if (this.loginParams) {\n          await this.web3AuthInstance.connectTo(WALLET_ADAPTERS.OPENLOGIN, this.loginParams);\n        } else {\n          log.error(\"please provide valid loginParams when using @web3auth/no-modal\");\n          throw new UserRejectedRequestError(\"please provide valid loginParams when using @web3auth/no-modal\" as unknown as Error);\n        }\n      }\n\n      const [account, connectedChainId] = await Promise.all([this.getAccount(), this.getChainId()]);\n      let unsupported = this.isChainUnsupported(connectedChainId);\n      let id = connectedChainId;\n      if (chainId && connectedChainId !== chainId) {\n        // try switching chain\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported,\n        },\n      };\n    } catch (error) {\n      log.error(\"error while connecting\", error);\n      this.onDisconnect();\n      throw new UserRejectedRequestError(\"Something went wrong\" as unknown as Error);\n    }\n  }\n\n  async getWalletClient({ chainId }: { chainId?: number } = {}): Promise<WalletClient> {\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider) throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider),\n    });\n  }\n\n  async getAccount(): Promise<Address> {\n    const provider = await this.getProvider();\n    const accounts = await provider.request<unknown, string[]>({\n      method: \"eth_accounts\",\n    });\n    return getAddress(accounts[0]);\n  }\n\n  async getProvider() {\n    if (this.provider) {\n      return this.provider;\n    }\n    if (this.web3AuthInstance.status === ADAPTER_STATUS.NOT_READY) {\n      if (isIWeb3AuthModal(this.web3AuthInstance)) {\n        await this.web3AuthInstance.initModal({\n          modalConfig: this.modalConfig,\n        });\n      } else if (this.loginParams) {\n        await this.web3AuthInstance.init();\n      } else {\n        log.error(\"please provide valid loginParams when using @web3auth/no-modal\");\n        throw new UserRejectedRequestError(\"please provide valid loginParams when using @web3auth/no-modal\" as unknown as Error);\n      }\n    }\n\n    this.provider = this.web3AuthInstance.provider;\n    return this.provider;\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async getChainId(): Promise<number> {\n    await this.getProvider();\n    const chainId = await this.provider.request<unknown, string>({ method: \"eth_chainId\" });\n    log.info(\"chainId\", chainId);\n    return normalizeChainId(chainId);\n  }\n\n  async switchChain(chainId: number) {\n    try {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain) throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n\n      await this.web3AuthInstance.addChain({\n        chainNamespace: CHAIN_NAMESPACES.EIP155,\n        chainId: `0x${chain.id.toString(16)}`,\n        rpcTarget: chain.rpcUrls.default.http[0],\n        displayName: chain.name,\n        blockExplorer: chain.blockExplorers?.default.url[0] || \"\",\n        ticker: chain.nativeCurrency?.symbol || \"ETH\",\n        tickerName: chain.nativeCurrency?.name || \"Ethereum\",\n        decimals: chain.nativeCurrency.decimals || 18,\n      });\n      log.info(\"Chain Added: \", chain.name);\n      await this.web3AuthInstance.switchChain({ chainId: `0x${chain.id.toString(16)}` });\n      log.info(\"Chain Switched to \", chain.name);\n      return chain;\n    } catch (error: unknown) {\n      log.error(\"Error: Cannot change chain\", error);\n      throw new SwitchChainError(error as Error);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    await this.web3AuthInstance.logout();\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n  }\n\n  protected onAccountsChanged = (accounts: string[]): void => {\n    if (accounts.length === 0) this.emit(\"disconnect\");\n    else this.emit(\"change\", { account: getAddress(accounts[0]) });\n  };\n\n  protected isChainUnsupported(chainId: number): boolean {\n    return !this.chains.some((x) => x.id === chainId);\n  }\n\n  protected onChainChanged = (chainId: string | number): void => {\n    const id = normalizeChainId(chainId);\n    const unsupported = this.isChainUnsupported(id);\n    log.info(\"chainChanged\", id, unsupported);\n    this.emit(\"change\", { chain: { id, unsupported } });\n  };\n\n  protected onDisconnect(): void {\n    this.emit(\"disconnect\");\n  }\n}\n"],"names":["ADAPTER_STATUS","CHAIN_NAMESPACES","WALLET_ADAPTERS","log","pkg","IS_SERVER","window","isIWeb3AuthModal","obj","initModal","normalizeChainId","chainId","Number","parseInt","trim","substring","Web3AuthConnector","Connector","constructor","_ref","chains","options","_defineProperty","accounts","length","emit","account","getAddress","id","unsupported","isChainUnsupported","info","chain","web3AuthInstance","loginParams","modalConfig","connect","arguments","undefined","type","getProvider","provider","on","onAccountsChanged","onChainChanged","connected","connectTo","OPENLOGIN","error","UserRejectedRequestError","connectedChainId","Promise","all","getAccount","getChainId","switchChain","onDisconnect","getWalletClient","find","x","Error","createWalletClient","transport","custom","request","method","status","NOT_READY","init","isAuthorized","_chain$blockExplorers","_chain$nativeCurrency","_chain$nativeCurrency2","SwitchChainError","addChain","chainNamespace","EIP155","toString","rpcTarget","rpcUrls","default","http","displayName","name","blockExplorer","blockExplorers","url","ticker","nativeCurrency","symbol","tickerName","decimals","disconnect","logout","removeListener","some"],"mappings":"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"}